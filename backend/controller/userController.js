const User = require("../models/userModels");
const jwt = require("jsonwebtoken");

const createToken = (_id) => {  // _id is going part of the payload of the token    
    return jwt.sign({_id: _id}, process.env.SECRET, {expiresIn: '3d'})  // User will be logged in for 3 days then it will expire
    // _id is the payload used to make the second part of the token
    // payload can be anything and could have the email for this as well but not the password because we don't put in sensitive information
    // in the payload
}

// login user
const loginUser = async (req, res) =>  {     // _id is the id generated by the database for every document. We're creating a token based on that identification
    try {
        const { email, password } = req.body;
        const user =  await User.login(email, password);  // returns document created
        
        // Create a Token
        const token = createToken(user._id);

        res.status(200).json({email, token})
        
    } catch (error) {
        res.status(400).json({error: error.message});
    }
}

// signup user
const signupUser = async (req, res) => {
    try {
        const { email, password } = req.body;
        const user =  await User.signup(email, password);  // returns document created
        
        // Create a Token
        const token = createToken(user._id);

        res.status(200).json({email, token})
        
    } catch (error) {
        res.status(400).json({error: error.message});
    }
}


module.exports = {
    signupUser,
    loginUser
}